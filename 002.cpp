/*
 * Project Euler problem #2
 *
 *  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 *  By starting with 1 and 2, the first 10 terms will be:
 *
 *          1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 *  By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 *  find the sum of the even-valued terms.
 *
 */

#include <iostream>

int getFibonacciSum(unsigned int multiplier, unsigned int maxInclusive)
{
    if (multiplier == 0)
    {
        return 0;
    }

    unsigned int prev = 1;
    unsigned int current = 1;
    unsigned int sum = 0;
    while (current <= maxInclusive)
    {
        if (current % multiplier == 0)
        {
            sum += current;
        }

        unsigned int old = prev;
        prev = current;
        current += old;
    }

    return sum;
}

int main(int, const char *[])
{
    const int upperBound = 4000000;

    std::cout << getFibonacciSum(2, upperBound) << std::endl;

    return 0;
}
